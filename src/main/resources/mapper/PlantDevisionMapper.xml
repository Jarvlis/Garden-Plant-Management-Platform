<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.plants.DAO.PlantDevisionDAO">

    <resultMap id="BaseResultMap" type="org.plants.po.PlantDevision">
        <id property="DevisionID" column="DevisionID" jdbcType="INTEGER"/>
        <result property="FamilyName" column="FamilyName" jdbcType="VARCHAR"/>
        <result property="GenusName" column="GenusName" jdbcType="VARCHAR"/>
        <result property="SpeciesName" column="SpeciesName" jdbcType="VARCHAR"/>
        <result property="Anothername" column="Anothername" jdbcType="VARCHAR"/>
        <result property="DistributionAreaID" column="DistributionAreaID" jdbcType="INTEGER"/>
        <result property="GrowingEnvironment" column="GrowingEnvironment" jdbcType="VARCHAR"/>
        <result property="Creator" column="Creator" jdbcType="INTEGER"/>
        <result property="CreationTime" column="CreationTime" jdbcType="TIMESTAMP"/>
        <result property="UpdateTime" column="UpdateTime" jdbcType="TIMESTAMP"/>

    </resultMap>

    <insert id="insert" keyColumn="DevisionID" keyProperty="DevisionID" parameterType="org.plants.po.PlantDevision" useGeneratedKeys="true">
        insert into PlantDevision
            ( FamilyName,GenusName,SpeciesName,Anothername,
             DistributionAreaID,GrowingEnvironment,Creator,CreationTime,UpdateTime)
        values
            ( #{FamilyName},#{GenusName},#{SpeciesName},#{Anothername},
             #{DistributionAreaID},#{GrowingEnvironment},1,#{CreationTime},#{UpdateTime})
    </insert>

    <delete id="delete" parameterType="INTEGER">
        delete from PlantDevision
        where  DevisionID = #{DevisionID}
    </delete>

    <update id="update" parameterType="org.plants.po.PlantDevision">
        update PlantDevision
        <set>
            <if test="FamilyName != null">
                FamilyName = #{FamilyName},
            </if>
            <if test="GenusName != null">
                GenusName = #{GenusName},
            </if>
            <if test="SpeciesName != null">
                SpeciesName = #{SpeciesName},
            </if>
            <if test="Anothername != null">
                Anothername = #{Anothername},
            </if>
            <if test="DistributionAreaID != null">
                DistributionAreaID = #{DistributionAreaID},
            </if>
            <if test="GrowingEnvironment != null">
                GrowingEnvironment = #{GrowingEnvironment},
            </if>
            <if test="CreationTime != null">
                CreationTime = #{CreationTime},
            </if>
            <if test="UpdateTime != null">
                UpdateTime = #{UpdateTime},
            </if>
        </set>
        where   DevisionID = #{DevisionID}
    </update>



    <select id="selectByPlantDevisionId" parameterType="INTEGER" resultMap="BaseResultMap">
        select
            *
        from PlantDevision
        where  DevisionID = #{DevisionID}
    </select>

    <select id="selectByGrowingEnvironment" parameterType="String" resultMap="BaseResultMap">
        select
            *
        from PlantDevision
        where GrowingEnvironment LIKE CONCAT('%', #{environment}, '%')
    </select>

    <select id="selectByFamilyName" parameterType="String" resultMap="BaseResultMap">
        select
            *
        from PlantDevision
        where  FamilyName LIKE CONCAT('%', #{FamilyName}, '%')
    </select>

    <select id="selectByFamilyName" parameterType="String" resultMap="BaseResultMap">
        select
            *
        from PlantDevision
        where  GenusName LIKE CONCAT('%', #{GenusName}, '%')
    </select>

    <select id="selectByGenusName" parameterType="String" resultMap="BaseResultMap">
        select
            *
        from PlantDevision
        where  SpeciesName LIKE CONCAT('%', #{SpeciesName}, '%')
    </select>

    <select id="selectByAnotherName" parameterType="String" resultMap="BaseResultMap">
        select
            *
        from PlantDevision
        where  Anothername LIKE CONCAT('%', #{Anothername}, '%')
    </select>

</mapper>
